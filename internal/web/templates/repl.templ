package templates

templ REPLPage() {
	@BaseLayout("REPL") {
		<div class="row">
			<div class="col-12">
				<div class="card">
					<div class="card-header d-flex justify-content-between align-items-center">
						<h5 class="mb-0">
							<i class="bi bi-terminal"></i>
							JavaScript REPL
						</h5>
						<div class="btn-group" role="group">
							<button type="button" class="btn btn-sm btn-outline-danger" id="clearReplBtn">
								<i class="bi bi-trash"></i>
								Clear History
							</button>
							<button type="button" class="btn btn-sm btn-outline-secondary" id="resetVmBtn">
								<i class="bi bi-arrow-clockwise"></i>
								Reset VM
							</button>
						</div>
					</div>
					<div class="card-body p-0">
						<!-- REPL Console -->
						<div id="replConsole" class="bg-dark text-light p-3 font-monospace" style="height: 60vh; overflow-y: auto;">
							<div class="text-success">JavaScript REPL - Type JavaScript expressions and press Enter</div>
							<div class="text-muted">Use Shift+Enter for multi-line input</div>
							<div class="text-muted">Available: app, db, console, globalState</div>
							<div class="mb-2"></div>
						</div>
						
						<!-- Input Area -->
						<div class="border-top">
							<div class="p-2 d-flex align-items-center">
								<span class="text-success me-2 font-monospace">></span>
								<div class="flex-fill">
									<textarea 
										id="replInput" 
										class="form-control bg-dark text-light font-monospace border-0" 
										rows="1" 
										placeholder="Enter JavaScript code..." 
										style="resize: none; box-shadow: none;"
									></textarea>
								</div>
								<button type="button" class="btn btn-sm btn-success ms-2" id="execReplBtn">
									<i class="bi bi-arrow-return-left"></i>
								</button>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
		
		<div class="row mt-4">
			<div class="col-md-6">
				<div class="card">
					<div class="card-header">
						<h6 class="mb-0">
							<i class="bi bi-lightbulb"></i>
							Quick Examples
						</h6>
					</div>
					<div class="card-body">
						<div class="d-grid gap-2">
							<button type="button" class="btn btn-outline-primary btn-sm text-start repl-example" data-code='app.get("/test", (req, res) => res.json({ok: true}))'>
								Create API endpoint
							</button>
							<button type="button" class="btn btn-outline-primary btn-sm text-start repl-example" data-code='db.query("SELECT COUNT(*) as count FROM script_executions")'>
								Query database
							</button>
							<button type="button" class="btn btn-outline-primary btn-sm text-start repl-example" data-code='globalState.counter = (globalState.counter || 0) + 1'>
								Use global state
							</button>
							<button type="button" class="btn btn-outline-primary btn-sm text-start repl-example" data-code='Math.random() * 100'>
								Generate random number
							</button>
						</div>
					</div>
				</div>
			</div>
			
			<div class="col-md-6">
				<div class="card">
					<div class="card-header">
						<h6 class="mb-0">
							<i class="bi bi-info-circle"></i>
							REPL Features
						</h6>
					</div>
					<div class="card-body">
						<ul class="list-unstyled mb-0">
							<li><i class="bi bi-check text-success"></i> Vim keybindings in input</li>
							<li><i class="bi bi-check text-success"></i> Multi-line support (Shift+Enter)</li>
							<li><i class="bi bi-check text-success"></i> Persistent global state</li>
							<li><i class="bi bi-check text-success"></i> Full JavaScript runtime</li>
							<li><i class="bi bi-check text-success"></i> Express.js API available</li>
							<li><i class="bi bi-check text-success"></i> SQLite database access</li>
						</ul>
					</div>
				</div>
			</div>
		</div>
	}
}
