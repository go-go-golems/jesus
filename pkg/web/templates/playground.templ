package templates

templ PlaygroundPage() {
	@BaseLayout("Playground") {
		<div class="row h-100">
			<!-- Editor Panel -->
			<div class="col-lg-8">
				<div class="card h-100">
					<div class="card-header d-flex justify-content-between align-items-center">
						<h5 class="mb-0">
							<i class="bi bi-code-slash"></i>
							JavaScript Editor
						</h5>
						<div class="btn-group" role="group">
							<button type="button" class="btn btn-sm btn-outline-primary" id="runBtn">
								<i class="bi bi-play-fill"></i>
								Run
							</button>
							<button type="button" class="btn btn-sm btn-outline-success" id="executeBtn">
								<i class="bi bi-cloud-upload"></i>
								Execute & Store
							</button>
							<button type="button" class="btn btn-sm btn-outline-secondary" id="clearBtn">
								<i class="bi bi-trash"></i>
								Clear
							</button>
							<div class="btn-group" role="group">
								<button type="button" class="btn btn-sm btn-outline-info dropdown-toggle" data-bs-toggle="dropdown">
									<i class="bi bi-bookmark"></i>
									Examples
								</button>
								<ul class="dropdown-menu" id="presetsMenu">
									<li><h6 class="dropdown-header">Code Examples</h6></li>
									<li><hr class="dropdown-divider"/></li>
									<!-- Presets will be loaded here -->
								</ul>
							</div>
							<div class="btn-group" role="group">
								<button type="button" class="btn btn-sm btn-outline-light dropdown-toggle" data-bs-toggle="dropdown">
									<i class="bi bi-gear"></i>
								</button>
								<ul class="dropdown-menu">
									<li>
										<div class="form-check form-switch px-3">
											<input class="form-check-input" type="checkbox" id="vimModeToggle" checked/>
											<label class="form-check-label" for="vimModeToggle">
												Vim Mode
											</label>
										</div>
									</li>
									<li><hr class="dropdown-divider"/></li>
									<li>
										<div class="px-3">
											<label for="fontSizeRange" class="form-label">Font Size</label>
											<input type="range" class="form-range" id="fontSizeRange" min="10" max="20" value="14"/>
										</div>
									</li>
								</ul>
							</div>
						</div>
					</div>
					<div class="card-body p-0" style="height: calc(100vh - 250px);">
						<textarea id="editor" class="w-100 h-100" data-default-code="true"></textarea>
					</div>
				</div>
			</div>
			
			<!-- Output Panel -->
			<div class="col-lg-4">
				<div class="card h-100">
					<div class="card-header">
						<ul class="nav nav-tabs card-header-tabs" id="outputTabs" role="tablist">
							<li class="nav-item" role="presentation">
								<button class="nav-link active" id="output-tab" data-bs-toggle="tab" data-bs-target="#output-panel" type="button" role="tab">
									<i class="bi bi-terminal"></i>
									Output
								</button>
							</li>
							<li class="nav-item" role="presentation">
								<button class="nav-link" id="quickref-tab" data-bs-toggle="tab" data-bs-target="#quickref-panel" type="button" role="tab">
									<i class="bi bi-book"></i>
									Quick Reference
								</button>
							</li>
						</ul>
					</div>
					<div class="card-body p-0">
						<div class="tab-content" id="outputTabContent">
							<!-- Output Tab -->
							<div class="tab-pane fade show active p-3" id="output-panel" role="tabpanel">
								<div class="d-flex justify-content-end mb-3">
									<button type="button" class="btn btn-sm btn-outline-secondary" id="clearOutputBtn">
										<i class="bi bi-x-circle"></i>
										Clear
									</button>
								</div>
						<!-- Status Bar -->
						<div class="mb-3">
							<div id="statusBar" class="d-flex justify-content-between align-items-center p-2 bg-dark rounded">
								<span id="statusText" class="text-light">
									<i class="bi bi-circle-fill text-success"></i>
									Ready
								</span>
								<span id="executionTime" class="text-muted small"></span>
							</div>
						</div>
						
						<!-- Console Output -->
						<div class="mb-3">
							<h6 class="text-muted">Console Output</h6>
							<div id="consoleOutput" class="bg-dark text-light p-3 rounded font-monospace" style="height: 200px; overflow-y: auto;">
								<div class="text-muted">Console output will appear here...</div>
							</div>
						</div>
						
						<!-- Result -->
						<div class="mb-3">
							<h6 class="text-muted">Result</h6>
							<div id="resultOutput" class="bg-dark text-light p-3 rounded font-monospace" style="height: 150px; overflow-y: auto;">
								<div class="text-muted">Execution result will appear here...</div>
							</div>
						</div>
						
						<!-- Session Info -->
						<div id="sessionInfo" class="text-muted small" style="display: none;">
							<strong>Session ID:</strong> <code id="sessionId"></code>
						</div>
							</div>
							
							<!-- Quick Reference Tab -->
							<div class="tab-pane fade p-3" id="quickref-panel" role="tabpanel">
								<div class="accordion" id="quickrefAccordion">
									<!-- API Reference -->
									<div class="accordion-item">
										<h2 class="accordion-header" id="apiHeader">
											<button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#apiCollapse">
												<i class="bi bi-cloud me-2"></i>
												API Functions
											</button>
										</h2>
										<div id="apiCollapse" class="accordion-collapse collapse" data-bs-parent="#quickrefAccordion">
											<div class="accordion-body">
												<h6>HTTP Routes</h6>
												<pre class="bg-dark text-light p-2 rounded"><code>app.get(path, handler)
app.post(path, handler)
app.put(path, handler)
app.delete(path, handler)

// Example:
app.get("/users", (req, res) =&gt; &#123;
  res.json(&#123; users: [] &#125;);
&#125;);</code></pre>
												
												<h6 class="mt-3">Response Methods</h6>
												<pre class="bg-dark text-light p-2 rounded"><code>res.json(data)      // Send JSON
res.send(text)      // Send text
res.status(code)    // Set status code
res.redirect(url)   // Redirect</code></pre>
											</div>
										</div>
									</div>
									
									<!-- Database Reference -->
									<div class="accordion-item">
										<h2 class="accordion-header" id="dbHeader">
											<button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#dbCollapse">
												<i class="bi bi-database me-2"></i>
												Database Functions
											</button>
										</h2>
										<div id="dbCollapse" class="accordion-collapse collapse" data-bs-parent="#quickrefAccordion">
											<div class="accordion-body">
												<h6>Basic Queries</h6>
												<pre class="bg-dark text-light p-2 rounded"><code>db.query(sql, params)     // Execute SQL
db.execute(sql, params)   // Execute with params
db.all(sql, params)       // Get all rows
db.get(sql, params)       // Get first row</code></pre>
												
												<h6 class="mt-3">Examples</h6>
												<pre class="bg-dark text-light p-2 rounded"><code>// Select data
const users = db.query("SELECT * FROM users");

// Insert data
db.execute("INSERT INTO logs (message) VALUES (?)", 
  &#91;"Hello World"&#93;);</code></pre>
											</div>
										</div>
									</div>
									
									<!-- Console Reference -->
									<div class="accordion-item">
										<h2 class="accordion-header" id="consoleHeader">
											<button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#consoleCollapse">
												<i class="bi bi-terminal me-2"></i>
												Console & Utilities
											</button>
										</h2>
										<div id="consoleCollapse" class="accordion-collapse collapse" data-bs-parent="#quickrefAccordion">
											<div class="accordion-body">
												<h6>Console Functions</h6>
												<pre class="bg-dark text-light p-2 rounded"><code>console.log(message)
console.error(message)
console.warn(message)
console.info(message)</code></pre>
												
												<h6 class="mt-3">Global Variables</h6>
												<pre class="bg-dark text-light p-2 rounded"><code>app        // Express app instance
db         // Database connection
req        // Current request (in handlers)
res        // Current response (in handlers)</code></pre>
											</div>
										</div>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	}
}
